
public class PathTravel {
	/*     N    
	 *     |
	 * W - - - E
	 *     |
	 *     S
	 */
	private int x,y;
	private String orientation;
	private Navigation navi;
	private Path path;
	public PathTravel(int x,int y, String o, Navigation n,Path p){
		this.x = x;
		this.y = y;
		path = p;
		orientation = o;
		navi = n;
	}
	
	public void moveNorth(){
		y++;
		if(orientation.equals("N")){
			navi.oneTileForward();
		}
		else if(orientation.equals("S")){
			navi.turnCCW();
			navi.turnCCW();
			navi.oneTileForward();
		}
		else if(orientation.equals("E")){
			navi.turnCCW();
			navi.oneTileForward();
		}
		else if(orientation.equals("W")){
			navi.turnCW();
			navi.oneTileForward();
		}
	}
	public void moveSouth(){
		y--;
		if(orientation.equals("S")){
			navi.oneTileForward();
		}
		else if(orientation.equals("N")){
			navi.turnCCW();
			navi.turnCCW();
			navi.oneTileForward();
		}
		else if(orientation.equals("W")){
			navi.turnCCW();
			navi.oneTileForward();
		}
		else if(orientation.equals("E")){
			navi.turnCW();
			navi.oneTileForward();
		}
	}
	public void moveEast(){
		x++;
		if(orientation.equals("E")){
			navi.oneTileForward();
		}
		else if(orientation.equals("W")){
			navi.turnCCW();
			navi.turnCCW();
			navi.oneTileForward();
		}
		else if(orientation.equals("S")){
			navi.turnCCW();
			navi.oneTileForward();
		}
		else if(orientation.equals("N")){
			navi.turnCW();
			navi.oneTileForward();
		}
	}
	public void moveWest(){
		x--;
		if(orientation.equals("W")){
			navi.oneTileForward();
		}
		else if(orientation.equals("E")){
			navi.turnCCW();
			navi.turnCCW();
			navi.oneTileForward();
		}
		else if(orientation.equals("N")){
			navi.turnCCW();
			navi.oneTileForward();
		}
		else if(orientation.equals("S")){
			navi.turnCW();
			navi.oneTileForward();
		}
	}
	
	public String getNext(GridSquare next){
		String mov = "";
		if(next.getY() == y+1){
			mov = "N";
		}
		else if(next.getY() == y-1){
			mov = "S";
		}
		else if(next.getX() == x+1){
			mov = "E";
		}
		else if(next.getX() == x-1){
			mov = "W";
		}
		return mov;
	}
	
	public void travelPath(){
		for(int i = 0; i < path.getSquares().size(); i++){
			String next = getNext(path.getSquares().get(i));
			if(next.equals("N")){
				moveNorth();
			}
			else if(next.equals("S")){
				moveSouth();
			}
			else if(next.equals("E")){
				moveEast();
			}
			else if(next.equals("W")){
				moveWest();
			}
		}
	}
}
