import java.util.ArrayList;


public class MapTester {
	public static void main(String[] args){
		boolean[][] walls = {{false,false,false,false,false,true,false,false},{false,false,false,false,false,false,false,true},{false,false,false,false,true,false,true,true}
			,{false,false,false,false,false,true,false,false},{false,true,true,true,false,false,false,false},{false,false,false,false,false,false,false,false},{false,false,true,false,false,true,false,false},
			{true,false,true,true,false,false,true,false}};
		
		Map map = new Map(8,1);
		
		map.addWalls(walls);
		
		map.populate();
		if(map.getWalls() != null){
			for(GridSquare s : map.getWalls()){
				System.out.println(s.getX() + " , " + s.getY());
			}
		}
		

		ArrayList<Ghost> gs = new ArrayList<Ghost>();
		for(int i = 0, i < map.getSize(); i++)
		
		Ghost g = new Ghost(0,0,"S",map);
		g.move();
		gs.add(g);
		gs.add(g);
		System.out.println(gs.size());
		for(int i = 0; i < gs.size(); i++){
			gs.remove(i);
			i--;
		}
		for(Ghost goul : gs){
			System.out.println(goul.getX() + " , " + goul.getY() + " , " + goul.getOrientation() + " , " + goul.wallinFront());
			//gs.remove(goul);
		}
		
		System.out.println(gs.size());
		//System.out.println(g.getX() + " , " + g.getY() + " , " + g.getOrientation() + " , " + g.wallinFront());
		

		System.out.println("Hello");
	}
}
